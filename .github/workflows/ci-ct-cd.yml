name: Continuous Integration/Training/Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: pytest

      - name: Train model
        run: python train.py

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: new-new-419022
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate Docker with GCR
        run: gcloud auth configure-docker gcr.io

      - name: Get current version from deployment.yaml
        id: get_version
        run: echo ::set-output name=version::$(grep 'image:' kubernetes/deployment.yaml | awk -F':' '{print $3}')

      - name: Increment version
        id: increment_version
        run: |
          # Extract version components
          MAJOR=$(echo "${{ steps.get_version.outputs.version }}" | cut -d. -f1)
          MINOR=$(echo "${{ steps.get_version.outputs.version }}" | cut -d. -f2)
          PATCH=$(echo "${{ steps.get_version.outputs.version }}" | cut -d. -f3)

          # Increment PATCH version
          PATCH=$((PATCH+1))

          # Set new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Update deployment.yaml with new version
        run: |
          sed -i "s/image: gcr.io\/new-new-419022\/mask-detector-app:${{ steps.get_version.outputs.version }}/image: gcr.io\/new-new-419022\/mask-detector-app:${{ steps.increment_version.outputs.new_version }}/" kubernetes/deployment.yaml

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/new-new-419022/mask-detector-app:${{ steps.increment_version.outputs.new_version }} .
          docker push gcr.io/new-new-419022/mask-detector-app:${{ steps.increment_version.outputs.new_version }}

      - name: Deploy to GKE
        run: |
          gcloud container clusters get-credentials mask-detector-cluster --zone europe-west1-b --project new-new-419022
          kubectl apply -f kubernetes/deployment.yaml

      - name: Verify deployment
        run: |
          kubectl get services 
          kubectl get pods
          kubectl rollout status deployment/mask-detector-app

        